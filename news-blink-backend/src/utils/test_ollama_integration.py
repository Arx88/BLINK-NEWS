#!/usr/bin/env python3
"""
Script de prueba para verificar la integraci√≥n con OLLAMA
"""

import sys
import os

# Agregar el directorio src al path
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from models.topic_searcher import TopicSearcher
from models.superior_note_generator import SuperiorNoteGenerator
import ollama

def test_ollama_connection():
    """Prueba la conexi√≥n con OLLAMA"""
    try:
        client = ollama.Client(host='http://localhost:11434')
        
        # Verificar que el modelo llama3 est√© disponible
        models = client.list()
        llama3_available = any('llama3' in model['name'] for model in models['models'])
        
        if not llama3_available:
            print("‚ùå Modelo llama3 no encontrado. Ejecute: ollama pull llama3")
            return False
        
        # Hacer una prueba simple
        response = client.chat(model='llama3', messages=[
            {'role': 'user', 'content': 'Responde solo con "OK" si puedes leer esto.'}
        ])
        
        if 'OK' in response['message']['content']:
            print("‚úÖ OLLAMA funcionando correctamente")
            return True
        else:
            print("‚ö†Ô∏è OLLAMA responde pero de forma inesperada")
            return False
            
    except Exception as e:
        print(f"‚ùå Error conectando con OLLAMA: {e}")
        print("Aseg√∫rese de que OLLAMA est√© ejecut√°ndose en localhost:11434")
        return False

def test_topic_searcher():
    """Prueba el buscador de temas"""
    try:
        searcher = TopicSearcher()
        print("‚úÖ TopicSearcher inicializado correctamente")
        
        # Prueba b√°sica de extracci√≥n de palabras clave
        keywords = searcher._extract_keywords("Argentina elecciones presidenciales 2023")
        print(f"‚úÖ Extracci√≥n de palabras clave: {keywords}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error en TopicSearcher: {e}")
        return False

def test_superior_note_generator():
    """Prueba el generador de notas superiores"""
    try:
        generator = SuperiorNoteGenerator()
        print("‚úÖ SuperiorNoteGenerator inicializado correctamente")
        
        # Crear datos de prueba
        test_articles = [
            {
                'source': 'Fuente 1',
                'title': 'Noticia de prueba sobre Argentina',
                'url': 'https://example.com/1',
                'summary': 'Esta es una noticia de prueba sobre Argentina para verificar el funcionamiento del sistema.'
            },
            {
                'source': 'Fuente 2', 
                'title': 'Otra perspectiva sobre Argentina',
                'url': 'https://example.com/2',
                'summary': 'Esta es otra perspectiva sobre el mismo tema para probar la generaci√≥n de notas superiores.'
            }
        ]
        
        # Probar generaci√≥n de t√≠tulo
        title = generator._generate_main_title(test_articles, "Argentina")
        print(f"‚úÖ Generaci√≥n de t√≠tulo: {title}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Error en SuperiorNoteGenerator: {e}")
        return False

def main():
    """Funci√≥n principal de pruebas"""
    print("üß™ Iniciando pruebas de integraci√≥n con OLLAMA\n")
    
    tests = [
        ("Conexi√≥n con OLLAMA", test_ollama_connection),
        ("TopicSearcher", test_topic_searcher),
        ("SuperiorNoteGenerator", test_superior_note_generator)
    ]
    
    results = []
    
    for test_name, test_func in tests:
        print(f"\nüìã Probando {test_name}...")
        result = test_func()
        results.append((test_name, result))
    
    print("\n" + "="*50)
    print("üìä RESUMEN DE PRUEBAS")
    print("="*50)
    
    for test_name, result in results:
        status = "‚úÖ PAS√ì" if result else "‚ùå FALL√ì"
        print(f"{test_name}: {status}")
    
    all_passed = all(result for _, result in results)
    
    if all_passed:
        print("\nüéâ Todas las pruebas pasaron. El sistema est√° listo para usar.")
    else:
        print("\n‚ö†Ô∏è Algunas pruebas fallaron. Revise los errores arriba.")
    
    return all_passed

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)

